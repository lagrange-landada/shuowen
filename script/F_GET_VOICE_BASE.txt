CREATE DEFINER=`root`@`localhost` FUNCTION `F_GET_VOICE_BASE`(cur_word VARCHAR(255), cur_voice VARCHAR(255)) RETURNS longtext CHARSET utf8mb4
    DETERMINISTIC
BEGIN
	-- ※※※※※※※※※※※※※※※※※※※※※※※
	-- ※※※※※※※※※特殊情况※※※※※※※※※
	-- ※※※※※※※※※※※※※※※※※※※※※※※
	-- 有些字，会出现循环充当声符的情况，此许书BUG！
	DECLARE special_sample longtext DEFAULT '兂,貞,𢏚,畺,豈,𢼸,朮,𣎼,希,𢁫,㕟,𡿪,𢀡,大,㬰,𠂂,灷,𠙴,𠁁';
	DECLARE next_voice longtext DEFAULT cur_voice;
	DECLARE result longtext;
	-- 表清空
	DELETE FROM tmp1;
	DELETE FROM tmp2;
	
	-- 结果为空，循环终止
	WHILE next_voice IS NOT NULL AND next_voice != '' DO
		
		-- 第1步：将参数插入tmp2中
		INSERT IGNORE INTO tmp2 (word)
    SELECT HEX(t.word) FROM (SELECT 
        SUBSTRING_INDEX(SUBSTRING_INDEX(next_voice, ';', n), ';', -1) AS word
    FROM (
        SELECT 1 AS n UNION SELECT 2 UNION SELECT 3 UNION 
        SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10
    ) numbers
    WHERE 
        n <= LENGTH(next_voice) - LENGTH(REPLACE(next_voice, ';', '')) + 1) t
		LEFT JOIN tmp2 ON t.word = tmp2.word
		WHERE tmp2.word IS NULL;
		-- 第2步：将非形声字插入tmp1中
		INSERT IGNORE INTO tmp1 (id, word)
    SELECT IFNULL(t.id, 6666), t.word FROM (SELECT t1.id, t2.word
    FROM shuowen_voice_revel t1
    RIGHT JOIN tmp2 t2 ON t1.word REGEXP CONCAT('.*', UNHEX(t2.word), '.*')
    WHERE (t1.voice = '' OR (special_sample REGEXP CONCAT('.*', UNHEX(t2.word), '.*'))) AND t2.`delete` = 0 AND FIND_IN_SET(UNHEX(t2.word), REPLACE(cur_word, ';', ',')) < 1) t
		LEFT JOIN tmp1 ON t.word = tmp1.word
		WHERE tmp1.word IS NULL;
		-- 第3步：继续递归查询声符
		SELECT GROUP_CONCAT(
        NULLIF(CONCAT_WS(';', NULLIF(t1.voice, ''), NULLIF(t1.voice_read, ''), NULLIF(t1.intter_voice, '')), '') SEPARATOR ';'
    ) INTO next_voice
    FROM shuowen_voice_revel t1 
    RIGHT JOIN tmp2 t2 ON t1.word REGEXP CONCAT('.*', UNHEX(t2.word), '.*') 
    WHERE t2.`delete` = 0;
		-- 第4步：将此次处理过的数据逻辑删除，避免死循环
		UPDATE tmp2 set `delete` = 1 WHERE `delete` = 0;
		
	END WHILE;
	
	SET result = (SELECT GROUP_CONCAT(UNHEX(word) SEPARATOR ';') FROM tmp1);
	
	DELETE FROM tmp1;
	DELETE FROM tmp2;
	
	RETURN result;
END